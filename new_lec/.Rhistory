if(hour_group[i,] %in% star_hour_line[k]) {
gsub(str_sub(star_hour_line$time[k], 7, 9), paste0(i*4-3, "~", i*4), star_hour_line[k])
}
}
}
hour_group
star_hour_line$time
hour_group <- c()
hour_group <- c()
for(i in 1:24) {
hour_group <- c(hour_group, paste0(" ", hourcount, "시"))
}
hour_group
hour_group <- c()
for(i in 1:24) {
hour_group <- c(hour_group, paste0(" ", i, "시"))
}
hour_group
for(i in 1:length(star_hour_line$time)) {
for(k in 1:24) {
if(hour_group[i] %in% star_hour_line[k]) {
gsub(str_sub(star_hour_line$time[k], 7, 9), paste0(i*4-3, "~", i*4), star_hour_line[k])
}
}
}
star_hour_line$time
hour_group
star_hour_line$time
# Change Hourly
star_date2 <- select(points, score, time)
tmp <- strptime(star_date2$time, "%Y.%m.%d %H:%M")
tmp <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", tmp$hour, "시")
star_date2$time <- tmp
star_date2$score <- as.character(star_date2$score)
star_date2$score <- as.numeric(star_date2$score)
star_date2
star_hour_line <- star_date2 %>%
group_by(time) %>%
summarise(avg_score = mean(score))
View(star_hour_line)
hour_group <- c()
star_hour_line
tmp <- strptime(star_date2$time, "%Y.%m.%d %H:%M")
tmp
# Change Hourly
star_date2 <- select(points, score, time)
tmp <- strptime(star_date2$time, "%Y.%m.%d %H:%M")
tmp
tmp$hour
length(tmp)
tmp
for(i in 1:length(tmp)) {
ifelse(tmp$hour[i] <= 4, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "1~4"),
tmp$hour[i] <= 8, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "4~8"),
tmp$hour[i] <= 12, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "8~12"),
tmp$hour[i] <= 16, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "12~16"),
tmp$hour[i] <= 20, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "16~20"),
tmp$hour[i] <= 24, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "21~24"))
}
tmp$hour
# Change Hourly
star_date2 <- select(points, score, time)
tmp <- strptime(star_date2$time, "%Y.%m.%d %H:%M")
for(i in 1:length(tmp)) {
ifelse(tmp$hour[i] <= 4, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "1~4"),
ifelse(tmp$hour[i] <= 8, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "4~8"),
ifelse(tmp$hour[i] <= 12, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "8~12"),
ifelse(tmp$hour[i] <= 16, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "12~16"),
ifelse(tmp$hour[i] <= 20, tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "16~20"),
tmp[i] <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", "21~24"))))))
}
tmp
# Change Hourly
star_date2 <- select(points, score, time)
tmp <- strptime(star_date2$time, "%Y.%m.%d %H:%M")
tmp$hour
for(i in 1:length(tmp)) {
ifelse(tmp$hour[i] <= 4, tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "1~4"),
ifelse(tmp$hour[i] <= 8, tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "4~8"),
ifelse(tmp$hour[i] <= 12, tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "8~12"),
ifelse(tmp$hour[i] <= 16, tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "12~16"),
ifelse(tmp$hour[i] <= 20, tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "16~20"),
tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "21~24"))))))
}
tmp
tmp$hour[1]
if(tmp$hour[1] <= 10) print(T)
tmp[1]
tmp[1]$hour
tmp[2]
tmp[1] <- paste0(tmp[2]$mon+1, "월 ", tmp[2]$mday, "일 ", tmp$hour, "시")
tmp[1] <- paste0(tmp[2]$mon+1, "월 ", tmp[2]$mday, "일 ", tmp[2]$hour, "시")
tmp[2]$mon+1
tmp[2]$mday
tmp[2]$hour
paste0(tmp[2]$mon+1, "월 ", tmp[2]$mday, "일 ", tmp[2]$hour, "시")
tmp[1] <- paste0(tmp[2]$mon+1, "월 ", tmp[2]$mday, "일 ", tmp[2]$hour, "시")
tmp[1] <- paste0(tmp[2]$mon+1, "월 ", tmp[2]$mday, "일 ", tmp[2]$hour, "시")
class(tmp)
as.character(tmp)
tmp[1] <- paste0(tmp[2]$mon+1, "월 ", tmp[2]$mday, "일 ", tmp[2]$hour, "시")
length(tmp)
tmp
time_tmp <- rep(NA, length(tmp))
length(time_tmp)
time_tmp[1] <- paste0(tmp[2]$mon+1, "월 ", tmp[2]$mday, "일 ", tmp[2]$hour, "시")
time_tmp
head(time_tmp)
time_tmp <- rep(NA, length(tmp))
for(i in 1:length(tmp)) {
ifelse(tmp$hour[i] <= 4, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "1~4"),
ifelse(tmp$hour[i] <= 8, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "4~8"),
ifelse(tmp$hour[i] <= 12, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "8~12"),
ifelse(tmp$hour[i] <= 16, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "12~16"),
ifelse(tmp$hour[i] <= 20, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "16~20"),
time_tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "21~24"))))))
}
time_tmp
for(i in 1:length(tmp)) {
ifelse(tmp$hour[i] <= 4, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "1~4시"),
ifelse(tmp$hour[i] <= 8, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "4~8시"),
ifelse(tmp$hour[i] <= 12, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "8~12시"),
ifelse(tmp$hour[i] <= 16, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "12~16시"),
ifelse(tmp$hour[i] <= 20, time_tmp[i] <- paste0(tmp[i]$mon+1, "월 ", tmp[i]$mday, "일 ", "16~20시"),
time_tmp[i] <- paste0(tmp$mon[i]+1, "월 ", tmp$mday[i], "일 ", "21~24시"))))))
}
time_tmp
star_date2$time <- time_tmp
star_date2
star_date2$score <- as.character(star_date2$score)
star_date2$score <- as.numeric(star_date2$score)
star_date2
star_hour_line <- star_date2 %>%
group_by(time) %>%
summarise(avg_score = mean(score))
star_hour_line
ggplot(star_date2, aes(x=time, y=score, color="red", group=1)) + geom_line()
ggplot(star_date2, aes(x=time, y=score, color="red")) + geom_line()
ggplot(star_date2, aes(x=time, y=score, color="red", group=1)) + geom_line()
ggplot(star_date2, aes(x=time, y=score, color="red", group=2)) + geom_line()
ggplot(star_date2, aes(x=time, y=score, color="red", group=3)) + geom_line()
ggplot(star_date2, aes(x=time, y=score, color="red", group=4)) + geom_line()
ggplot(star_date2, aes(x=time, y=score)) + geom_line()
ggplot(star_date2, aes(x=time, y=score, group=1)) + geom_line()
ggplot(star_hour_line, aes(x=time, y=score, group=1)) + geom_line()
ggplot(star_hour_line, aes(x=time, y=score, group=1)) + geom_line(stat="identity")
star_hour_line
tmp <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", tmp$hour, "시")
tmp
star_date2$time <- tmp
star_date2$score <- as.character(star_date2$score)
star_date2$score <- as.numeric(star_date2$score)
star_date2
star_hour_line <- star_date2 %>%
group_by(time) %>%
summarise(avg_score = mean(score))
star_hour_line
ggplot(star_hour_line, aes(x=time, y=score, group=1)) + geom_line()
star_hour_line
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) + geom_line()
star_date2
star_date2$time <- time_tmp
star_date2$score <- as.character(star_date2$score)
star_date2$score <- as.numeric(star_date2$score)
star_date2
star_hour_line <- star_date2 %>%
group_by(time) %>%
summarise(avg_score = mean(score))
star_hour_line
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) + geom_line()
ggplot(star_hour_line, aes(x=time, y=avg_score, color="red")) + geom_line()
ggplot(star_hour_line, aes(x=time, y=avg_score, group=2)) + geom_line()
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) + geom_line()
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) + geom_line(color="red", lwd=2)
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) + geom_line(color="red", lwd=1)
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("날짜(일)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] 날짜에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("날짜(일)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화")
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화")
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"),
axis.text.x = element_text(angle=90))
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"),
axis.text.x = element_text(angle=45))
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"),
axis.text.x = element_text(angle=45, hjust=1, vjust=1, color='black', size=8))
star_hour_line
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1, color='black', size=8))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1, color='black', size=8))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1, color='black', size=8))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=90))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=30))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=60))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1, color='black', size=8))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1, size=8))
ggplot(star_hour_line, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1))
# Change Hourly
star_date2 <- select(points, score, time)
tmp <- strptime(star_date2$time, "%Y.%m.%d %H:%M")
tmp <- paste0(tmp$mon+1, "월 ", tmp$mday, "일 ", tmp$hour, "시")
star_date2$time <- tmp
star_date2$score <- as.character(star_date2$score)
star_date2$score <- as.numeric(star_date2$score)
star_date2
star_hour_line1 <- star_date2 %>%
group_by(time) %>%
summarise(avg_score = mean(score))
star_hour_line1
ggplot(star_hour_line1, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1))
ggplot(star_hour_line1, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1))
ggplot(star_hour_line1, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont")) +
theme(axis.text.x = element_blank())
ggplot(star_hour_line1, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 1시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"),
axis.text.x = element_blank())
star_date2$time <- time_tmp
star_date2$score <- as.character(star_date2$score)
star_date2$score <- as.numeric(star_date2$score)
star_date2
star_hour_line2 <- star_date2 %>%
group_by(time) %>%
summarise(avg_score = mean(score))
star_hour_line2
ggplot(star_hour_line2, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"),
axis.text.x = element_text(angle=45, hjust=1, vjust=1))
ggplot(star_hour_line2, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 4시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"),
axis.text.x = element_text(angle=45, hjust=1, vjust=1))
ggplot(star_hour_line1, aes(x=time, y=avg_score, group=1)) +
geom_line(color="red", lwd=1) +
theme_light() +
xlab("시간(단위: 1시간)") +
ylab("평점(1~10점)") +
ggtitle("2019 [스파이더맨 : 파 프롬 홈] \n 시간에 따른 평균 평점 변화") +
theme(plot.title=element_text(size=rel(2), face="bold", hjust=0.5, family="myfont")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.x = element_text(size=rel(1.2), family="myfont"),
axis.title.y = element_text(size=rel(1.2), family="myfont"),
axis.text.x = element_blank())
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rJava)
library(KoNLP)
a <- data.frame(c(1:100), rep(c('a','b'), 50))
a
b <- data.frame(rep(c('a','b'),50), rep(c('1231312','8908908'), 50))
b
merge(a, b, by=a$rep.c..a....b....50.)
merge(a, b, by.x=a$rep.c..a....b....50., by.y=b$rep.c..a....b....50. )
merge.data.frame(a, b, by.x=a$rep.c..a....b....50., by.y=b$rep.c..a....b....50. )
?merge
names(a)
colnames(a) = c('a', 'b')
colnames(b) <- c('b', 'c')
a
b
head(a)
head(b)
merge.data.frame(a, b, by='b')
merge.data.frame(a, b, by.x=rep.c..a....b....50., by.y=rep.c..a....b....50. )
a <- data.frame(c(1:100), rep(c('a','b'), 50))
b <- data.frame(rep(c('a','b'),50), rep(c('1231312','8908908'), 50))
merge.data.frame(a, b, by.x=rep.c..a....b....50., by.y=rep.c..a....b....50. )
merge.data.frame(a, b, by= rep.c..a....b....50. )
a <- data.frame(c(1:100), rep(c('a','b'), 50))
b <- data.frame(rep(c('a','b'),50), rep(c('1231312','8908908'), 50))
head(a)
head(b)
merge.data.frame(a, b, by = rep.c..a....b....50.)
merge.data.frame(a, b, by =rep.c..a....b....50.)
merge.data.frame(a, b, by = 'rep.c..a....b....50.')
b <- data.frame(c('a','b'), c('1231312','8908908'))
b
merge.data.frame(a, b, by = 'rep.c..a....b....50.')
colnames(a) <- c('a', 'b')
colnames(b) <- c('b', 'c')
head(a)
head(b)
merge.data.frame(a, b, by='b')
setwd("C:/Users/Jwp/Desktop/workspace/python/Data_Science/new_lec")
data = read.csv("data/sales_건강음료.csv", header=T)
data
model = lm(QTY ~ . , data=data)
model = lm(formula = QTY ~ ., data=data)
data1 = data[-CATEGORY,]
data1 = data[-'CATEGORY',]
data1 = data[, -'CATEGORY']
data1 = data[, -CATEGORY]
data1 = data[, -2]
data1
model = lm(formula = QTY ~ ., data=data1)
model.summary()
summary(model)
library(stringr)
data$MON = str_sub(data$YM, 5, 6)
data
data$MON = int(data$MON)
data$MON = as.numeric(data$MON)
data
data1 = data[, -2]
data1
data1 = data[,c(-1, -2)]
data1
model = lm(formula = QTY ~ ., data=data1)
summary(model)
data2 = data1[,-6]
data2
head(data2)
model2 = lm(formula = QTY ~ ., data=data2)
summary(model2)
data
head(data)
head(data1)
step(model1, method='both')
step(model, method='both')
step1 = step(model, method='both')
summary(step1)
