lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
review <- rbind(review, result)
}
review
review <- data.frame()
for(i in 1:length(pages)) {
url_all <- paste0(ifr_base_url, i)
html <- read_html(url_all)
html
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
lis
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
review <- rbind(review, result)
}
review
pages <- c(1:10)
review <- data.frame()
for(i in 1:length(pages)) {
url_all <- paste0(ifr_base_url, i)
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
review <- rbind(review, result)
}
review
review <- data.frame()
for(i in 1:length(pages)) {
url_all <- paste0(ifr_base_url, i)
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
review <- rbind.data.frame(review, result)
}
review <- c()
for(i in 1:length(pages)) {
url_all <- paste0(ifr_base_url, i)
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
review <- rbind.data.frame(review, result)
}
url_all <- paste0(ifr_base_url, 1)
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
reviews <- c()
reviews <- c()
url_all <- paste0(ifr_base_url, 1)
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
review <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
reviews <- rbind.data.frame(reviews, result)
review
result
reviews <- rbind(reviews, result)
reviews
reviews <- c()
for(i in 1:length(pages)) {
url_all <- paste0(ifr_base_url, pages[i])
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
review <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
reviews <- rbind.data.frame(reviews, result)
}
reviews
url <- 'https://front.wemakeprice.com/deal/600089247?source=dealsearch&search_keyword=%EA%B7%B8%EB%9E%A8&_service=5&no&extservice=ad'
html <- read_html
html <- read_html(url)
html
a <- html_node(html, 'div.review_area')
a
a <- html_nodes(html, 'div.review_area')
a
a <- html_nodes(html, '.tab_conts')
a
a <- html_node(html, '.tab_conts')
a
a <- html_nodes(html, '.review_area')
a
a <- html_node(html, '.review_area')
a <- html_node(html, '.tab_conts')
a <- html_node(html, '.review_area')
a
a <- html_node(html, '.desc_cont')
a
a <- html_node(html, '.tab_conts')
a <- html_node(html, '.desc_cont')
a
a <- html_nodes(html, '.review_area')
a
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
ifr_base_url <- 'https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=173123&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page='
pages <- c(1:242)
reviews <- c()
for(i in 1:length(pages)) {
url_all <- paste0(ifr_base_url, pages[i])
html <- read_html(url_all)
html %>%
html_node('div.score_result') %>%
html_nodes('li') -> lis
score <- c()
writer <- c()
review <- c()
time <- c()
for (li in lis) {
score <- c(score, html_node(li, '.star_score') %>% html_text('em') %>% trim())
li %>%
html_node('.score_reple') %>%
html_text('p') %>%
trim() -> tmp
idx <- str_locate(tmp, "\r")
review <- c(review, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
writer <- c(writer, str_sub(tmp, 1, idx[1]-1))
tmp <- trim(str_sub(tmp, idx[1], -1))
idx <- str_locate(tmp, "\r")
time <- c(time, str_sub(tmp, 1, idx[1]-1))
#print(time)
}
result <- data.frame(score=score, review=review, writer=writer, time=time)
reviews <- rbind.data.frame(reviews, result)
}
library(xlsx)
write.xlsx(reviews, "D:/workspace-Jwp/R/R-Project/01_Crowling/reviews.xlsx")
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
install.packages("KoNLP")
library(rJava)
library(KoNLP)
library(rJava)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
useSejongDic()
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_202")
library(rJava)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_202/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_202/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
library(KoNLP)
library(rJava)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_211")
library(rJava)
library(KoNLP)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_211")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_211/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_211/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
useSejongDic()
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(rJava)
install.packages("rJava")
# NAVER 영화 ('스파이더맨 : 파프롬 홈') 일반인 리뷰 크롤링
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk1.8.0_211/")
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(ggplot2)
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(rJava)
library(rJava)
# NAVER 영화 [ 스파이더맨 : 파프롬 홈 ] 일반인 리뷰 크롤링
library(rvest)
library(stringr)
library(dplyr)
library(xlsx)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
# NAVER 영화 [ 스파이더맨 : 파프롬 홈 ] 일반인 리뷰 크롤링
install.packages("rJava")
install.packages("rJava")
library(rJava)
library(KoNLP)
a <- data.frame(c(1:100), c(rep('a', 'b', 50)))
a
a <- data.frame(c(1:100), c(rep('a', 'b', each=50)))
?rep
a <- data.frame(c(1:100), c(rep('a', 'b', each=T)))
rep(1, 2)
a <- data.frame(c(1:100), rep(c('a', 'b'), each=50)))
rep(c(1, 2), 3)
rep(c(1, 2), each=T)
rep(c(1, 2), 30, each=T)
rep(c(1, 2, 2), 30, each=T)
rep(c(1, 2, 2), 30)
rep(c('a','b'), each=2)
rep(c('a','b'), 2)
a <- data.frame(c(1:100), rep(c('a', 'b'), 50)))
a <- data.frame(c(1:100), rep(c('a', 'b'), 100)))
a <- data.frame(c(1:100), rep(c('a', 'b'), 100))
aa
a
a <- data.frame(c(1:100), rep(c('a', 'b'), 50)
a <- data.frame(c(1:100), rep(c('a', 'b'), 50))
?rep
a
b <- data.frame(rep(c('a', 'b'), 50), rep(c('123214', '898908'), 50))
b
?merge
setwd("D:/workspace-Jwp/python/Data_Science/new_lec")
like <- read.csv('data/like.csv', stringsAsFactors = F, header = T) # 데이터 로드, 문자형을 factor로 받지 않음
str(like)
colnames(like) <- c('talk', 'book', 'travel', 'school', 'tall', 'skin','muscle', 'label') # 데이 컬럼명 변경
test <- data.frame(talk = 70, book = 50, travel = 30, school=70,
tall = 70, skin = 40, muscle = 50) # 테스트 데이터
library(class)
train <- like[, -8] # 종속변수를 뺀 데이터셋
group <- like[, 8]
knn(train, test, group, k=3, prob=T)
knn(train, test, group, k=4, prob=T)
like
test
library(caret)
idx <- createDataPartition(iris$Species, p=0.7, list=F) # Y의 속성비율을 같게하는 랜덤 샘플링 방법
iris_train <- iris[idx,]  # 학습용 데이터
iris_test <- iris[-idx,]  # 검증용 데이터
install.packages("caret")
#install.packages("caret")
library(caret)
idx <- createDataPartition(iris$Species, p=0.7, list=F) # Y의 속성비율을 같게하는 랜덤 샘플링 방법
iris_train <- iris[idx,]  # 학습용 데이터
iris_test <- iris[-idx,]  # 검증용 데이터
table(iris_train$Species) # 데이터 확인
table(iris_test$Species)
install.packages('e1071') # 나이브 베이즈 패키지
library(e1071)
train_rt <- naiveBayes(iris_train, iris_train$Species, laplace = 1) # naiveBayes(X, Y, laplace=1 [스무스한 형태로 나타냄])
naive_pdt <- predict(train_rt, iris_test, type = 'class')  # 학습 결과를 출력, type='class' 범주형 데이터
table(naive_pdt, iris_test$Species) # 학습결과 테이블
confusionMatrix(naive_pdt, iris_test$Species)
install.packages('nnet')
install.packages("nnet")
library(nnet)
install.packages('nnet')
install.packages("nnet")
library(nnet)
mult_rt <- multinom(Species~., iris_train) # 종속변수가 3가지 이상일 때 다중로지스틱 회귀분석 적용
multi_pdt <- predict(mult_rt, iris_test)
table(iris_test$Species, multi_pdt)
confusionMatrix(multi_pdt, iris_test$Species)
1 / (1 + exp(0))
